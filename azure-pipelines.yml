trigger:
      - main

stages:
- stage: ProvisionInfra
  displayName: "Provision Azure Infra with Terraform"
  jobs:
  - job: Terraform
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Installing Terraform'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'lucky-spn-connec'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          cd infra
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
      displayName: 'provisioning Infra'

- stage: BuildApp
  displayName: "Build and Publish ASP.NET App"
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.411' # or your required version
    

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: DeployApp
  displayName: "Deploy to Azure App Service"
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: drop

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'lucky-spn-connec'
        appType: 'webApp'
        appName: 'luckywebapp'
        package: '$(Pipeline.Workspace)/drop/**/*.zip'
      displayName: 'Deploying to App'
