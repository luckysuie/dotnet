trigger:
  - main

stages:
- stage: ProvisionInfra
  displayName: "Provision Azure Infra with Terraform"
  jobs:
  - job: Terraform
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Installing Terraform'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'lucky-spn-connec'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          cd infra
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
      displayName: 'Provisioning Infra'

- stage: BuildApp
  displayName: "Build and Publish ASP.NET App"
  dependsOn: ProvisionInfra
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.411'
      displayName: 'Install Dotnet'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
      displayName: 'Restoring Dependencies'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
      displayName: 'Building'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*.csproj'
      displayName: 'Running Tests'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
      displayName: 'Publishing Artifact'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publishing to Pipeline Artifact'

- stage: DeployToDev
  displayName: "Deploy to Dev Environment"
  dependsOn: BuildApp
  jobs:
  - deployment: DeployDev
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'lucky-spn-connec'
              appType: 'webApp'
              appName: 'luckywebapp'
              package: '$(Pipeline.Workspace)/drop/**/*.zip'
            displayName: 'Deploying to Dev App Service'

- stage: DeployToStage
  displayName: "Deploy to Stage Environment"
  dependsOn: DeployToDev
  jobs:
  - deployment: DeployStage
    environment: Stage
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'lucky-spn-connec'
              appType: 'webApp'
              appName: 'luckywebapp'
              package: '$(Pipeline.Workspace)/drop/**/*.zip'
            displayName: 'Deploying to Stage App Service'

- stage: DeployToProd
  displayName: "Deploy to Production Environment"
  dependsOn: DeployToStage
  jobs:
  - deployment: DeployProd
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'lucky-spn-connec'
              appType: 'webApp'
              appName: 'luckywebapp'
              package: '$(Pipeline.Workspace)/drop/**/*.zip'
            displayName: 'Deploying to Production App Service'
